// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/28/2022 16:01:13"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Calculadora
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Calculadora_vlg_vec_tst();
// constants                                           
// general purpose registers
reg B1;
reg B2;
reg B3;
reg B4;
reg CLK;
reg [6:0] N1;
reg [6:0] N2;
// wires                                               
wire [0:6] CentResult;
wire [0:6] Dec1;
wire [0:6] Dec2;
wire [0:6] DecResult;
wire [0:6] MilResult;
wire [0:6] Uni1;
wire [0:6] Uni2;
wire [0:6] UniResult;

// assign statements (if any)                          
Calculadora i1 (
// port map - connection between master ports and signals/registers   
	.B1(B1),
	.B2(B2),
	.B3(B3),
	.B4(B4),
	.CLK(CLK),
	.CentResult(CentResult),
	.Dec1(Dec1),
	.Dec2(Dec2),
	.DecResult(DecResult),
	.MilResult(MilResult),
	.N1(N1),
	.N2(N2),
	.Uni1(Uni1),
	.Uni2(Uni2),
	.UniResult(UniResult)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #10000 1'b1;
	#10000;
end 
// N1[ 6 ]
initial
begin
	N1[6] = 1'b0;
end 
// N1[ 5 ]
initial
begin
	N1[5] = 1'b0;
end 
// N1[ 4 ]
initial
begin
	N1[4] = 1'b0;
end 
// N1[ 3 ]
initial
begin
	N1[3] = 1'b1;
end 
// N1[ 2 ]
initial
begin
	N1[2] = 1'b1;
end 
// N1[ 1 ]
initial
begin
	N1[1] = 1'b0;
end 
// N1[ 0 ]
initial
begin
	N1[0] = 1'b0;
end 
// N2[ 6 ]
initial
begin
	N2[6] = 1'b0;
end 
// N2[ 5 ]
initial
begin
	N2[5] = 1'b1;
end 
// N2[ 4 ]
initial
begin
	N2[4] = 1'b0;
end 
// N2[ 3 ]
initial
begin
	N2[3] = 1'b0;
end 
// N2[ 2 ]
initial
begin
	N2[2] = 1'b0;
end 
// N2[ 1 ]
initial
begin
	N2[1] = 1'b0;
end 
// N2[ 0 ]
initial
begin
	N2[0] = 1'b0;
end 

// B1
initial
begin
	B1 = 1'b0;
	B1 = #100000 1'b1;
	B1 = #200000 1'b0;
	B1 = #100000 1'b1;
end 

// B2
initial
begin
	B2 = 1'b1;
end 

// B3
initial
begin
	B3 = 1'b1;
end 

// B4
initial
begin
	B4 = 1'b1;
	B4 = #100000 1'b0;
	B4 = #100000 1'b1;
end 
endmodule

